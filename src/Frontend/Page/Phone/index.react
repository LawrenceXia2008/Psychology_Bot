import React from "react"

import applyHOCs from "direct-core/applyHOCs";

import makePage from "direct-core/makePage"

import { view as RecordVoice } from "Connected/RecordVoice";
import { actions as Audio } from "Connected/RecordVoice";

import LoginForm from "Connected/UserAuth/LoginForm";

import { connect } from "react-redux";

import { bindActionCreators } from "redux";

import style from "style";

import SelectField from 'material-ui/SelectField';
import MenuItem from 'material-ui/MenuItem';

import {
  blue300,
  lightBlue300,
  cyan500
} from "material-ui/styles/colors";

//import { view as Login } from "Connected/UserAuth";

//定义背景样式

var bgStyle = {
  position:"absolute",
  left:"50%",
  transform: "translateX(-50%)"
};

var imgStyle={
  height:'25%',
  width:'25%',
  boderRadius:"12.5%",
  position:"absolute",
  left:"50%",
  top:"20%",
  transform: "translateX(-50%)"
}


class TestPage extends React.Component {

  state = {
    time: 0,
    formatTime : "00:00",
    voice: 3
  }

  startTick = () => {
    this.handle = setInterval( () => {
      var time = this.state.time;//格式化，为何不单独写一个函数?因为单独写一个函数，总是提示未定义，只好出此下策
      var formatMin,formatSec;
      var second,min;
      min = parseInt(time / 60);
      second = parseInt(time % 60);
      if (min < 10)
        formatMin = "0" + min;
      else
        formatMin = min;

      if (second < 10)
        formatSec = "0" + second;
      else
        formatSec = second;

      var formatTime;
      formatTime = formatMin + ":" + formatSec;
      this.setState({
        time: this.state.time + 1,
        formatTime : formatTime
      });

    }, 1000 );
  }


  stopTick = () => {
    clearInterval( this.handle );
    this.setState({
        time: 0,
        formatTime : "00:00"
      });
  }

  handleChange = ( $, key ) => {
    this.props.selectVoice( key );
    this.setState({
      voice: key
    });
  }

  render(){
    const { voice } = this.state;
    return (
      <div className={style.bg}>
        <img src="/static/img/welcome.jpg" className={style.imgStyle} />
        <h2 className={style.xiaowei}>
          {
            (function(){
              switch( voice ){
                case 0:
                  return "霸道学姐";
                case 1:
                  return "清纯学长";
                case 2:
                  return "性感大叔";
                case 3:
                  return "小薇";
              }
            })()
          }
        </h2>
        <div
          className={style.contactTime}
        >
          <h1>{this.state.formatTime}</h1>
        </div>
        <img className={style.bar} src="/static/img/bar.png"/>
        <div className={style.phonePos}>
          <RecordVoice
            show
            onStart={this.startTick}
            onEnd={this.stopTick}
            autoStart={false}
            samplingRate={16*1000}
          />
        </div>
        <div>
          <SelectField
            floatingLabelText="选择语音"
            value={this.state.voice}
            onChange={this.handleChange}
            floatingLabelStyle={{
              color: "white"
            }}
            hintStyle={{
              color: "white"
            }}
            selectedMenuItemStyle={{
              color: "white"
            }}
          >
            <MenuItem value={0} primaryText="霸道学姐" />
            <MenuItem value={1} primaryText="清纯学长" />
            <MenuItem value={2} primaryText="性感大叔" />
            <MenuItem value={3} primaryText="小薇" />
          </SelectField>
        </div>
      </div>

    )
  }
}

export default applyHOCs([
  makePage,
  connect(
    state => ({
      voice: state.Audio.voice
    }),
    dispatch => bindActionCreators( Audio, dispatch )
  )
] , TestPage );
