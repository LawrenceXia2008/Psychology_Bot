import React from "react";

import Button from "direct-core/UI/Button";

import { connect } from "react-redux";

import { bindActionCreators } from "redux";

import * as actions from "actions";

import bufferToWav from "audiobuffer-to-wav";

const audioCtx = new AudioContext();

const reader = new FileReader();

var processingTime = 0;

const SpeechRecognition = webkitSpeechRecognition;

class AutoCatchAudio extends React.Component {

  recognition = new SpeechRecognition()

  constructor( props ){
    super( props );
    this.recognition.continuous = true;
    this.recognition.interimResults = true;
    this.recognition.lang = "zh-CN";
    this.recognition.onresult = ev => {
      console.log( ev.results );
      if( ev.results.length === 1 ){
        this.lastSentence = ev.results[0][0].transcript;
      } else {
        this.lastSentence = (ev.results[ev.results.length - 2] || [{}] )[0].transcript;
      }
      console.log( this.lastSentence );
    }

    this.recognition.end = () => {
      console.log("end");
    }
    this.recognition.onspeechend = () => {
      console.log("speech");
      console.log( this.lastSentence );
    }
    this.recognition.onsoundend = () => {
      console.log("soundend");
      console.log( this.lastSentence );
    }
    this.recognition.onaudioend = () => {
      console.log("audioend");
      console.log( this.lastSentence );
    }
  }

  render(){
    return (
      <div>
        <Button
          onClick={this.recognition.start.bind( this.recognition )}
          text="start"
        />
      </div>
    );
  }
};

export default connect(
  state => ({

  }),
  dispatch => bindActionCreators( actions , dispatch )
)(AutoCatchAudio);
